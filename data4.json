{
    "id": "184f9d499b5ae50b",
    "threadId": "184f9d499b5ae50b",
    "labelIds": [
        "UNREAD",
        "CATEGORY_UPDATES",
        "INBOX"
    ],
    "snippet": "Hi Neeraj Sati, We have here a list of the top jobs recommended especially for you! Department Manager Shoppersstop Chandigarh | 2-5 yrs Skills: Self-motivated, and, confident. APPLY Receptionist",
    "payload": {
        "partId": "",
        "mimeType": "multipart/mixed",
        "filename": "",
        "headers": [
            {
                "name": "Delivered-To",
                "value": "neeraj.sati123@gmail.com"
            },
            {
                "name": "Received",
                "value": "by 2002:a0d:cc8b:0:0:0:0:0 with SMTP id o133csp1222680ywd;        Fri, 9 Dec 2022 18:19:30 -0800 (PST)"
            },
            {
                "name": "X-Google-Smtp-Source",
                "value": "AA0mqf6/eoM4HhC2uzDFCVh+Q7kgn4IuXHYWxkJWk7bwo8dDqWkkUcVDItfL61MKqbYW/g3Hrnlh"
            },
            {
                "name": "X-Received",
                "value": "by 2002:a17:902:7c90:b0:186:f257:8df with SMTP id y16-20020a1709027c9000b00186f25708dfmr6921826pll.42.1670638770420;        Fri, 09 Dec 2022 18:19:30 -0800 (PST)"
            },
            {
                "name": "ARC-Seal",
                "value": "i=1; a=rsa-sha256; t=1670638770; cv=none;        d=google.com; s=arc-20160816;        b=rTNmyDDWi1ZLalOlSlslkx0LZRmz0f9QGhK3zPdjzvetQXltNfx5CLMLDmSOwEGdqM         ZJ7NwXT/uCDptLIypm7TGJJ7K1I8bYb1WTgfH6p7RA8Ru9Ngk+RlD7DnB8x3HAmRHpuV         9kSR5C/19xvOFI/awuvqyb3UxzUmUQKUO0+5VuuFPtNmHGWoONqU81UR3aLqtxrfrEaw         +zwm8TjX3qMbny0GUKpVKJMpyXeFM84cdWpm/mMBn9BQESwkkVEPXyzyWfM/xzGUEOp0         Tl6iysdiucnir4FQmTu9WpnwQkaibrQARE1Abw5PyO6Uq0pbJh29qC2I/vHmdetBswL0         nF4Q=="
            },
            {
                "name": "ARC-Message-Signature",
                "value": "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;        h=mime-version:subject:message-id:to:from:date:dkim-signature         :dkim-filter;        bh=vZlMIMQlelapvS8/i5dTcmTE5tyGhH4ObS4oRdieoTo=;        b=01obRVwBPCFXeaNwXUOrPU0DoYtGrEzcF+ligAukC0Ge5WuGlKqCko+oA1ejXy2lxS         J9rZLsROA7A2HMHzufsIccUqRWNyk2pXRWvpM7o7AQ33My5w4HrhHrBMv/c0qUJ0aQfm         U1Cbxgbe8yaELrt2NutyASFiIrgU+AHpS3OZVB+v8ulQzZWtHNvoM9cSFfWBkormqex+         4sIlV27AecNPxkhXrXD1NHIy+VPSToEXMiJ9DMP85JMjsYEljUg1GLDh6hCRkjghlBDz         3Z5UIcPSPm0BPpPCBiR0AuzHuCECfqj8vWxOcD/kvsPOrXkq3hEPyZQ++SHeYyrCkJnV         EqOg=="
            },
            {
                "name": "ARC-Authentication-Results",
                "value": "i=1; mx.google.com;       dkim=pass header.i=@monsterindia.com header.s=default header.b=Mg9Fu88t;       spf=pass (google.com: domain of jobmessenger@monsterindia.com designates 40.80.92.20 as permitted sender) smtp.mailfrom=jobmessenger@monsterindia.com;       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=monsterindia.com"
            },
            {
                "name": "Return-Path",
                "value": "<jobmessenger@monsterindia.com>"
            },
            {
                "name": "Received",
                "value": "from alerts13.monsterindia.com (alerts13.monsterindia.com. [40.80.92.20])        by mx.google.com with ESMTPS id k11-20020a170902ce0b00b0018695bddc4bsi3080753plg.470.2022.12.09.18.19.29        for <neeraj.sati123@gmail.com>        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);        Fri, 09 Dec 2022 18:19:30 -0800 (PST)"
            },
            {
                "name": "Received-SPF",
                "value": "pass (google.com: domain of jobmessenger@monsterindia.com designates 40.80.92.20 as permitted sender) client-ip=40.80.92.20;"
            },
            {
                "name": "Authentication-Results",
                "value": "mx.google.com;       dkim=pass header.i=@monsterindia.com header.s=default header.b=Mg9Fu88t;       spf=pass (google.com: domain of jobmessenger@monsterindia.com designates 40.80.92.20 as permitted sender) smtp.mailfrom=jobmessenger@monsterindia.com;       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=monsterindia.com"
            },
            {
                "name": "Received",
                "value": "from jr-consumer-postprocessor-prod-6794f494cf-vb5d4 (unknown [10.216.247.212]) by alerts13.monsterindia.com (Postfix) with ESMTPA id 9BBEDC01E6 for <neeraj.sati123@gmail.com>; Sat, 10 Dec 2022 07:48:24 +0530 (IST)"
            },
            {
                "name": "DKIM-Filter",
                "value": "OpenDKIM Filter v2.11.0 alerts13.monsterindia.com 9BBEDC01E6"
            },
            {
                "name": "DKIM-Signature",
                "value": "v=1; a=rsa-sha256; c=relaxed/relaxed; d=monsterindia.com; s=default; t=1670638704; bh=vZlMIMQlelapvS8/i5dTcmTE5tyGhH4ObS4oRdieoTo=; h=Date:From:To:Subject:From; b=Mg9Fu88tMBB/RRlea12Xf1EX3PyK01D2qZL76D7aindpz3ObTR+NcqmKqAjX6qybb\t XZCUC1nc1ZdIcDkfcyuOuJnl2DxvrgTe552p9nr0T2MzD+pXuBJMnC+nn2qKXVXTHk\t PaDTR/3ZOeUTzmkXI6DlB7UD0B5PUpST1UZaU8iQ="
            },
            {
                "name": "Date",
                "value": "Sat, 10 Dec 2022 07:48:24 +0530 (IST)"
            },
            {
                "name": "From",
                "value": "foundit - Monster Jobs <jobmessenger@monsterindia.com>"
            },
            {
                "name": "To",
                "value": "neeraj.sati123@gmail.com"
            },
            {
                "name": "Message-ID",
                "value": "<1941703520.8088586.1670638704636@jr-consumer-postprocessor-prod-6794f494cf-vb5d4>"
            },
            {
                "name": "Subject",
                "value": "Shoppersstop and others are hiring. Apply now!"
            },
            {
                "name": "MIME-Version",
                "value": "1.0"
            },
            {
                "name": "Content-Type",
                "value": "multipart/mixed; boundary=\"----=_Part_8088416_1317994171.1670638704390\""
            }
        ],
        "body": {
            "size": 0
        },
        "parts": [
            {
                "partId": "0",
                "mimeType": "multipart/related",
                "filename": "",
                "headers": [
                    {
                        "name": "Content-Type",
                        "value": "multipart/related; boundary=\"----=_Part_8088417_1253937398.1670638704390\""
                    }
                ],
                "body": {
                    "size": 0
                },
                "parts": [
                    {
                        "partId": "0.0",
                        "mimeType": "text/html",
                        "filename": "",
                        "headers": [
                            {
                                "name": "Content-Type",
                                "value": "text/html;charset=UTF-8"
                            },
                            {
                                "name": "Content-Transfer-Encoding",
                                "value": "quoted-printable"
                            }
                        ],
                        "body": {
                            "size": 84528,
                            "data": "PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiINCiAgICAgICAgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ-DQogICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPg0KICAgIDx0aXRsZT4NCiAgICAgICAgU2hvcHBlcnNzdG9wDQogICAgICAgIGFuZCBvdGhlciBjb21wYW5pZXMgYXJlIGxvb2tpbmcgZm9yIGNhbmRpZGF0ZXMgbGlrZSB5b3U8L3RpdGxlPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4NCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPg0KICAgIDxzdHlsZT4NCg0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsNCmJvZHkgLmMtdjg0cnBtIHsNCgl3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KCW1heC13aWR0aDogNjAwcHggIWltcG9ydGFudDsNCn0NCmJvZHkgLmMtdjg0cnBtIC5jLTdiZ2l5MSAuYy0xYzg2c2NtIHsNCglkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQp9DQpib2R5IC5jLXY4NHJwbSAuYy03YmdpeTEgLmMtZjFidWQ0IC5jLXBla3Y5biAuYy0xcXY1YmJqLCBib2R5IC5jLXY4NHJwbSAuYy03YmdpeTEgLmMtZjFidWQ0IC5jLTFjOW85ZXggLmMtMXF2NWJiaiwgYm9keSAuYy12ODRycG0gLmMtN2JnaXkxIC5jLWYxYnVkNCAuYy05MHFtbmogLmMtMXF2NWJiaiB7DQoJYm9yZGVyLXdpZHRoOiAxcHggMCAwICFpbXBvcnRhbnQ7DQp9DQpib2R5IC5jLXY4NHJwbSAuYy03YmdpeTEgLmMtZjFidWQ0IC5jLTE4M2xwOGogLmMtMXF2NWJiaiB7DQoJYm9yZGVyLXdpZHRoOiAxcHggMCAhaW1wb3J0YW50Ow0KfQ0KYm9keSAuYy12ODRycG0gLmMtN2JnaXkxIC5jLWYxYnVkNCAuYy1wZWt2OW4gLmMtMXF2NWJiaiB7DQoJcGFkZGluZy1sZWZ0OiAxMnB4ICFpbXBvcnRhbnQ7DQoJcGFkZGluZy1yaWdodDogMTJweCAhaW1wb3J0YW50Ow0KfQ0KYm9keSAuYy12ODRycG0gLmMtN2JnaXkxIC5jLWYxYnVkNCAuYy0xYzlvOWV4IC5jLTFxdjViYmosIGJvZHkgLmMtdjg0cnBtIC5jLTdiZ2l5MSAuYy1mMWJ1ZDQgLmMtOTBxbW5qIC5jLTFxdjViYmogew0KCXBhZGRpbmctbGVmdDogOHB4ICFpbXBvcnRhbnQ7DQoJcGFkZGluZy1yaWdodDogOHB4ICFpbXBvcnRhbnQ7DQp9DQpib2R5IC5jLXY4NHJwbSAuYy1yeTRndGggLmMtMWRoc2JxdiB7DQoJZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Ow0KfQ0KDQp9DQogQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsNCiAgICBib2R5IC5jLXY4NHJwbSAuYy1yeTRndGggLmMtMXZsZDRjeiB7DQogICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4ICFpbXBvcnRhbnQ7DQogICAgfQ0KICAgLmZ1bGxXaWR0aCB7DQoJd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCgloZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsNCiAgICBkaXNwbGF5OnRhYmxlICFpbXBvcnRhbnQ7DQogICAgfQ0KfQ0KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkgew0KLmZ1bGxXaWR0aCB7DQoJd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCgloZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsNCiAgICBkaXNwbGF5OnRhYmxlICFpbXBvcnRhbnQ7DQp9DQoNCg0KfQ0KDQogICAgPC9zdHlsZT4NCjwvaGVhZD4NCg0KPGJvZHkgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgZm9udC1mYW1pbHk6QXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsgZm9udC13ZWlnaHQ6IDMwMDsgZm9udC1zdHJldGNoOiBub3JtYWw7IGZvbnQtc2l6ZTogMTRweDsgbGV0dGVyLXNwYWNpbmc6IC4zNXB4OyBiYWNrZ3JvdW5kOiAjZjRmNmY4OyBjb2xvcjogIzMzMzMzMzsiPg0KPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBhbGlnbj0iY2VudGVyIiBjbGFzcz0iYy12ODRycG0iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgd2lkdGg6IDYwMHB4OyIgd2lkdGg9IjYwMCI-DQogICAgPHRib2R5Pg0KDQoNCiAgICA8dHIgIGNsYXNzPSJjLTFzeWYzcGIiDQogICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGhlaWdodDogMXB4OyI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGRpc3BsYXk6bm9uZSIgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vYXBpdjIubW9uc3RlcmluZGlhLmNvbS9wZW5ndWluL2FwaS9wdWJsaWMvbm90aWZpY2F0aW9uL3YxL3VzZXJBY3RpdmUuanBnP25vdGlmaWNhdGlvbklkPTI2NzEyZmY3LTZmOTktNDQzNC1hNWMyLTRlZThlZjBiM2VkYyZhbXA7aWQ9UVcwemFXaERNVVo1VDFKblJVSmlTME41Vldsb09Tc3hSVk01Vm5Cb1QyTnpUemxITURkcVdHRllSbEJNY1dKcWFGVTFaWEY0VTBOcWRtRnNTVWd4UkhGV2FYUnVaMGszV2xWUWJqUktRWEl6TTFNMU1UVk5UbWcxTVZCNE1YZEtXRFphYzA5VldsSlFiRGhsZERGUVdtNVNWWGh6VEhkUE4zUm9Ta3h2WTBaRE1EbEVlSEJoVG5sdWR6Wk5PSFJQVjNSNWVERlVabWxIU201UVMxazNVMnRCUVZvMmJXeEdlVFJ6TVVGa1RXNWpRM0ZoT0U0M1pHOVJVbTFFUml0eiIgYWx0PSJ1c2VyQWN0aXZlIj4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KDQogICAgPHRkIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJidG0tcGEiIHN0eWxlPSJwYWRkaW5nOjBweDsiPjxpbWcgc3JjPSJodHRwczovL21lZGlhLmZvdW5kaXQuaW4vcHJvZC1jZG4vZW1haWwvaW1hZ2VzL21haWxlci1oZWFkZXIuanBnIiBzdHlsZT0iZGlzcGxheTpibG9jayIgIGFsdD0iIj4NCiAgICA8L3RkPg0KDQogICAgPCEtLSB0ciB0aDppZj0iJHt0b3BCYW5uZXIuYmFubmVyRGF0YSAhPSBudWxsfSIgY2xhc3M9ImMtMXN5ZjNwYiIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgIDx0ZCBjbGFzcz0ibW9iaWxlQWRzIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IHBhZGRpbmc6MDsgdGV4dC1hbGlnbjpjZW50ZXIiIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpZnJhbWUgdGg6c3JjPSIke3RvcEJhbm5lci50cmFja1VybH0iIHdpZHRoPSIzMDAiIGhlaWdodD0iNjAiIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW53aWR0aD0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luaGVpZ2h0PSIwIiBzY3JvbGxpbmc9Im5vIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aDpocmVmPSIke3RvcEJhbm5lci5jbGlja1VybH0iPjxpbWcgdGg6c3JjPSIke3RvcEJhbm5lci5iYW5uZXJEYXRhfSIgd2lkdGg9IjU1MCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSI2MCIgYm9yZGVyPSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICA8L2lmcmFtZT4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyLS0-DQoNCg0KICAgIDwhLS08dHIgY2xhc3M9ImMtMXN5ZjNwYiIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgIDx0ZCB2YWxpZ249Im1pZGRsZSIgYmdjb2xvcj0iI0ZGRkZGRiIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyI-DQogICAgICAgICAgICA8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSJjLWYxYnVkNCINCiAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Ij4NCiAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgPHRyIGFsaWduPSJjZW50ZXIiIGNsYXNzPSJjLTFwN2E2OGoiDQogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBwYWRkaW5nOjEwcHggMCIgdmFsaWduPSJtaWRkbGUiPjxpbWcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ9IiIgdGg6c3JjPSIke21vbnN0ZXJMb2dvfSIgY2xhc3M9ImMtMXNodXhpbyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGxpbmUtaGVpZ2h0OiAxMDAlOyBvdXRsaW5lOiBub25lOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPSIyMjAiPjwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyLS0-DQogICAgPHRyIGNsYXNzPSJjLXBla3Y5biIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBsZWZ0OyIgYWxpZ249ImxlZnQiPg0KICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBwYWRkaW5nOjIwcHggMjBweCAxMHB4IDIwcHg7IGJhY2tncm91bmQ6I0ZGRkZGRiINCiAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJjLTFxdjViYmoiDQogICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMDsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItc3R5bGU6IHNvbGlkOyB3aWR0aDogMTAwJTsgYm9yZGVyLXdpZHRoOiAwcHggMHB4IDA7IGJhY2tncm91bmQ6ICNGRkZGRkY7Ij4NCiAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgPHRyIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayINCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1mYW1pbHk6IEFyaWFsOyBjb2xvcjogIzAwMDAwMDsgZm9udC1zaXplOiAxNnB4OyINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj5IaSBOZWVyYWogU2F0aSw8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQoNCiAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYmFja2dyb3VuZDojRkZGRkZGOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtc2l6ZToxM3B4OyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAyMHB4IDBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICBXZSBoYXZlIGhlcmUgYSBsaXN0IG9mIHRoZSB0b3Agam9icyByZWNvbW1lbmRlZCBlc3BlY2lhbGx5IGZvciB5b3UhPC90ZD4NCiAgICA8L3RyPg0KDQogICAgPHRyIGNsYXNzPSJjLXBla3Y5biIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBsZWZ0OyIgYWxpZ249ImxlZnQiPg0KICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBiYWNrZ3JvdW5kOiNGRkZGRkY7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1zaXplOjEzcHg7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDBweCAwcHg7IGNvbG9yOiAjMDAwMDAwOyIgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI-DQoNCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjLXBla3Y5biINCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjLTFtOWVtZnggYy16andmaGsiDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMTBweCAwcHggMTBweDsgY29sb3I6ICMwMDAwMDA7IGJhY2tncm91bmQ6I0ZGRkZGRiINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGRkZGQ7IGJvcmRlci1yYWRpdXM6M3B4OyBwYWRkaW5nOjEwcHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojZmZmO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjQ1MHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMTAwJSIgc3R5bGU9IndpZHRoOjUwMHB4OyBmb250LXNpemU6MTNweDsgbGluZS1oZWlnaHQ6MTlweDsgZm9udC13ZWlnaHQ6NzAwOyI-PGENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENTQzNDY4NiUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjFfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiM1ZTBiYWI7IGZvbnQtd2VpZ2h0OjcwMDsiPkRlcGFydG1lbnQgTWFuYWdlcjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTaG9wcGVyc3N0b3A8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGFuZGlnYXJoICZuYnNwOyZuYnNwOyZuYnNwO3wmbmJzcDsmbmJzcDsmbmJzcDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDItNSB5cnMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTa2lsbHM6ICBTZWxmLW1vdGl2YXRlZCwgYW5kLCBjb25maWRlbnQuPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBhbGlnbj0icmlnaHQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0icGFkZGluZy10b3A6NXB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCIgc3R5bGU9IiBiYWNrZ3JvdW5kLWNvbG9yOiAjNmUwMGJkOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAlIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjRkZGRkZGOyBmb250LXNpemU6MTNweDsiPjxhIHN0eWxlPSJjb2xvcjojRkZGRkZGOyB0ZXh0LWRlY29yYXRpb246bm9uZTsgZGlzcGxheTpibG9jazsgcGFkZGluZy10b3A6MTBweDsgcGFkZGluZy1ib3R0b206MTBweCIgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGam9iLWRldGFpbHMlM0ZpZCUzRDU0MzQ2ODYlMjZhdXRvQXBwbHklM0R0cnVlJTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iMV8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWxfYXBwbHlsaW5rJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCI-QVBQTFk8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQoNCg0KDQogICAgICAgICAgICA8L3RhYmxlPg0KDQoNCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KDQogICAgPHRyIGNsYXNzPSJjLXBla3Y5biIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBsZWZ0OyIgYWxpZ249ImxlZnQiPg0KICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBiYWNrZ3JvdW5kOiNGRkZGRkY7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1zaXplOjEzcHg7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDBweCAwcHg7IGNvbG9yOiAjMDAwMDAwOyIgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI-DQoNCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjLXBla3Y5biINCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjLTFtOWVtZnggYy16andmaGsiDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMTBweCAwcHggMTBweDsgY29sb3I6ICMwMDAwMDA7IGJhY2tncm91bmQ6I0ZGRkZGRiINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGRkZGQ7IGJvcmRlci1yYWRpdXM6M3B4OyBwYWRkaW5nOjEwcHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojZmZmO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjQ1MHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMTAwJSIgc3R5bGU9IndpZHRoOjUwMHB4OyBmb250LXNpemU6MTNweDsgbGluZS1oZWlnaHQ6MTlweDsgZm9udC13ZWlnaHQ6NzAwOyI-PGENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzc5NDIyMiUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjJfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiM1ZTBiYWI7IGZvbnQtd2VpZ2h0OjcwMDsiPlJlY2VwdGlvbmlzdCA8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFuc3lzIENvbnN1bHRpbmcgU2VydmljZXM8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJm5ic3A7Jm5ic3A7Jm5ic3A7fCZuYnNwOyZuYnNwOyZuYnNwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMS01IHlycw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNraWxsczogIFJlY2VwdGlvbmlzdDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCIgYWxpZ249InJpZ2h0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmctdG9wOjVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSIgYmFja2dyb3VuZC1jb2xvcjogIzZlMDBiZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogI0ZGRkZGRjsgZm9udC1zaXplOjEzcHg7Ij48YSBzdHlsZT0iY29sb3I6I0ZGRkZGRjsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IGRpc3BsYXk6YmxvY2s7IHBhZGRpbmctdG9wOjEwcHg7IHBhZGRpbmctYm90dG9tOjEwcHgiIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3Nzk0MjIyJTI2YXV0b0FwcGx5JTNEdHJ1ZSUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjJfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsX2FwcGx5bGluayUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiPkFQUExZPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KDQoNCg0KICAgICAgICAgICAgPC90YWJsZT4NCg0KDQogICAgICAgIDwvdGQ-DQogICAgPC90cj4NCg0KICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYmFja2dyb3VuZDojRkZGRkZGOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtc2l6ZToxM3B4OyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAwcHggMHB4OyBjb2xvcjogIzAwMDAwMDsiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPg0KDQogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjLTFzeWYzcGIiIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBwYWRkaW5nOjEwcHggMjBweCAwcHg7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IHRleHQtYWxpZ246Y2VudGVyIiBhbGlnbj0iY2VudGVyIiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPSUyRmNhcmVlci1zZXJ2aWNlcyUzRnV0bV9zb3VyY2UlM0RudWRnZV9qb2JyZWNvbW1lbmRhdGlvbm1haWxlciUyNnV0bV9jYW1wYWlnbiUzRGNhcmVlcnNlcnZpY2VzIiB0YXJnZXQ9ImNzX2Jhbm5lciI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzdHlsZT0iZGlzcGxheTpibG9jazsiIHNyYz0iaHR0cHM6Ly9tZWRpYS5tb25zdGVyaW5kaWEuY29tL3Byb2QtY2RuL2VtYWlsL2ltYWdlcy9DUy1OdWRnZS1KUi5wbmciIHdpZHRoPSIxMDAlIiBmcmFtZWJvcmRlcj0iMCIgbWFyZ2lud2lkdGg9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW5oZWlnaHQ9IjAiIHNjcm9sbGluZz0ibm8iIG5hbWU9ImNzX2Jhbm5lciIgaWQ9ImNzX2Jhbm5lciI-DQogICAgICAgICAgICAgICAgICAgICAgICA8L2E-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJjLXBla3Y5biINCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjLTFtOWVtZnggYy16andmaGsiDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMTBweCAwcHggMTBweDsgY29sb3I6ICMwMDAwMDA7IGJhY2tncm91bmQ6I0ZGRkZGRiINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZGRkZGQ7IGJvcmRlci1yYWRpdXM6M3B4OyBwYWRkaW5nOjEwcHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGFsaWduPSJsZWZ0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojZmZmO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjQ1MHB4Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMTAwJSIgc3R5bGU9IndpZHRoOjUwMHB4OyBmb250LXNpemU6MTNweDsgbGluZS1oZWlnaHQ6MTlweDsgZm9udC13ZWlnaHQ6NzAwOyI-PGENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzc5Mjg5NiUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjNfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiM1ZTBiYWI7IGZvbnQtd2VpZ2h0OjcwMDsiPlRlY2hubyBGdW5jdGlvbmFsIENvbnN1bHRhbnQgLSBGaW5hbmNlIE1vZHVsZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeWdicyAoSW5kaWEpIExMUDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE11bHRpcGxlIENpdGllcyAmbmJzcDsmbmJzcDsmbmJzcDt8Jm5ic3A7Jm5ic3A7Jm5ic3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAzLTYgeXJzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2tpbGxzOiAgVGVjaG5vIEZ1bmN0aW9uYWwgQ29uc3VsdGFudCwgUzQgSGFuYSwgT3JhY2xlIEZ1c2lvbiwgRnVuY3Rpb25hbC4uLjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCIgYWxpZ249InJpZ2h0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmctdG9wOjVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSIgYmFja2dyb3VuZC1jb2xvcjogIzZlMDBiZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogI0ZGRkZGRjsgZm9udC1zaXplOjEzcHg7Ij48YSBzdHlsZT0iY29sb3I6I0ZGRkZGRjsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IGRpc3BsYXk6YmxvY2s7IHBhZGRpbmctdG9wOjEwcHg7IHBhZGRpbmctYm90dG9tOjEwcHgiIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3NzkyODk2JTI2YXV0b0FwcGx5JTNEdHJ1ZSUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjNfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsX2FwcGx5bGluayUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiPkFQUExZPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KDQoNCg0KICAgICAgICAgICAgPC90YWJsZT4NCg0KDQogICAgICAgIDwvdGQ-DQogICAgPC90cj4NCg0KICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYmFja2dyb3VuZDojRkZGRkZGOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtc2l6ZToxM3B4OyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAwcHggMHB4OyBjb2xvcjogIzAwMDAwMDsiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPg0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iDQogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyIgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYy0xbTllbWZ4IGMtemp3ZmhrIg0KICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDEwcHggMHB4IDEwcHg7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kOiNGRkZGRkYiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkZGRkOyBib3JkZXItcmFkaXVzOjNweDsgcGFkZGluZzoxMHB4OyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0ibGVmdCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6I2ZmZjt3aWR0aDoxMDAlO21heC13aWR0aDo0NTBweCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjEwMCUiIHN0eWxlPSJ3aWR0aDo1MDBweDsgZm9udC1zaXplOjEzcHg7IGxpbmUtaGVpZ2h0OjE5cHg7IGZvbnQtd2VpZ2h0OjcwMDsiPjxhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGam9iLWRldGFpbHMlM0ZpZCUzRDc2NjIyNDUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I0XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbCUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lOyBjb2xvcjojNWUwYmFiOyBmb250LXdlaWdodDo3MDA7Ij5Qcm9jZXNzIEF1dG9tYXRpb24gY29tbWlzc2lvbmluZyBFbmdpbmVlcjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIdVBlcnAgTWFuYWdlbWVudCBhbmQgQ29uc3VsdGFuY3kgU2VydmljZXMgTExQPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmVuZ2FsdXJ1IC8gQmFuZ2Fsb3JlICZuYnNwOyZuYnNwOyZuYnNwO3wmbmJzcDsmbmJzcDsmbmJzcDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAtMCB5cnMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTa2lsbHM6ICBSZWxheXMsIE1vdG9ycywgQ29udHJvbCBTeXN0ZW1zLCBlbGVjdHJpY2FsIGNhbGN1bGF0aW9ucywgUGxjLCBTLi4uPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBhbGlnbj0icmlnaHQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0icGFkZGluZy10b3A6NXB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCIgc3R5bGU9IiBiYWNrZ3JvdW5kLWNvbG9yOiAjNmUwMGJkOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAlIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjRkZGRkZGOyBmb250LXNpemU6MTNweDsiPjxhIHN0eWxlPSJjb2xvcjojRkZGRkZGOyB0ZXh0LWRlY29yYXRpb246bm9uZTsgZGlzcGxheTpibG9jazsgcGFkZGluZy10b3A6MTBweDsgcGFkZGluZy1ib3R0b206MTBweCIgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGam9iLWRldGFpbHMlM0ZpZCUzRDc2NjIyNDUlMjZhdXRvQXBwbHklM0R0cnVlJTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iNF8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWxfYXBwbHlsaW5rJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCI-QVBQTFk8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQoNCg0KDQogICAgICAgICAgICA8L3RhYmxlPg0KDQoNCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KDQogICAgPHRyIGNsYXNzPSJjLXBla3Y5biIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBsZWZ0OyIgYWxpZ249ImxlZnQiPg0KICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBiYWNrZ3JvdW5kOiNGRkZGRkY7IHRleHQtYWxpZ246bGVmdDsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgZm9udC1zaXplOjEzcHg7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDBweCAwcHg7IGNvbG9yOiAjMDAwMDAwOyIgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgPHRhYmxlIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI-DQoNCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iDQogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyIgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IHBhZGRpbmc6IDE1cHggMTVweCAxNXB4OyBiYWNrZ3JvdW5kOiNGRkZGRkYiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0iYy0xcXY1YmJqIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLWNvbG9yOiAjRkZGRkZGOyBib3JkZXItc3R5bGU6IHNvbGlkOyB3aWR0aDogMTAwJTsgYm9yZGVyLXdpZHRoOiAwcHggMHB4IDA7IGZvbnQtc2l6ZToxMnB4OyBiYWNrZ3JvdW5kOiNmNmYwZmI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjcwJSIgYWxpZ249ImxlZnQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZm9udC13ZWlnaHQ6IDcwMDsgY29sb3I6ICMwMDAwMDA7IGZvbnQtc2l6ZTogMTJweDsgcGFkZGluZy10b3A6MTVweDsgcGFkZGluZy1ib3R0b206MTVweDsgcGFkZGluZy1sZWZ0OjEwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFSRSBUSEVTRSBKT0JTIFJFTEVWQU5UPzwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMzAlIiBhbGlnbj0icmlnaHQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZy1yaWdodDoxMHB4OyBwYWRkaW5nLXRvcDoxNXB4OyBwYWRkaW5nLWJvdHRvbToxNXB4OyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgd2lkdGg9IjkwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249InJpZ2h0Ij48YSBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2JhbGVydC1mZWVkYmFjayUzRmlkJTNEY2xWdGFXVktRV1JwTkZWM2VqQjRkM0pEVVdZMU5GUklWelpGTWpoNVUyeG9aV3RSV1U4eGRFSlBRWGsxZEZScmF6bEJaeXQxTWxjeGQxcDZaRm8xZFElM0QlM0QlMjZub3RpZmljYXRpb25JZCUzRDI2NzEyZmY3LTZmOTktNDQzNC1hNWMyLTRlZThlZjBiM2VkYyUyNnJlc3BvbnNlJTNEbm8lMjZ0eXBlJTNEcmVjb21tZW5kZWRqb2JzIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiAjNmUwMGJkOyBmb250LXdlaWdodDo3MDA7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5PIDwvYT48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249InJpZ2h0IiBzdHlsZT0icGFkZGluZy1sZWZ0OjEwcHgiPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYmFsZXJ0LWZlZWRiYWNrJTNGaWQlM0RjbFZ0YVdWS1FXUnBORlYzZWpCNGQzSkRVV1kxTkZSSVZ6WkZNamg1VTJ4b1pXdFJXVTh4ZEVKUFFYazFkRlJyYXpsQlp5dDFNbGN4ZDFwNlpGbzFkUSUzRCUzRCUyNm5vdGlmaWNhdGlvbklkJTNEMjY3MTJmZjctNmY5OS00NDM0LWE1YzItNGVlOGVmMGIzZWRjJTI2cmVzcG9uc2UlM0R5ZXMlMjZ0eXBlJTNEcmVjb21tZW5kZWRqb2JzIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTsgY29sb3I6ICM2ZTAwYmQ7IGZvbnQtd2VpZ2h0OjcwMDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWUVTIDwvYT48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iDQogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyIgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYy0xbTllbWZ4IGMtemp3ZmhrIg0KICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDEwcHggMHB4IDEwcHg7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kOiNGRkZGRkYiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkZGRkOyBib3JkZXItcmFkaXVzOjNweDsgcGFkZGluZzoxMHB4OyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0ibGVmdCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6I2ZmZjt3aWR0aDoxMDAlO21heC13aWR0aDo0NTBweCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjEwMCUiIHN0eWxlPSJ3aWR0aDo1MDBweDsgZm9udC1zaXplOjEzcHg7IGxpbmUtaGVpZ2h0OjE5cHg7IGZvbnQtd2VpZ2h0OjcwMDsiPjxhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGam9iLWRldGFpbHMlM0ZpZCUzRDc2NDQxNTYlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I1XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbCUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lOyBjb2xvcjojNWUwYmFiOyBmb250LXdlaWdodDo3MDA7Ij5KYXZhK0FXUyAvSmF2YSArTWljcm9zZXJ2aWNlcytEb2NrZXI8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29uZmlkZW50aWFsPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmVuZ2FsdXJ1IC8gQmFuZ2Fsb3JlICZuYnNwOyZuYnNwOyZuYnNwO3wmbmJzcDsmbmJzcDsmbmJzcDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDgtMTIgeXJzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2tpbGxzOiAgSmF2YSwgYXdzLCBNaWNyb3NlcnZpY2VzLCBEb2NrZXI8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGFsaWduPSJyaWdodCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIiBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtc2l6ZToxM3B4OyI-PGEgc3R5bGU9ImNvbG9yOiNGRkZGRkY7IHRleHQtZGVjb3JhdGlvbjpub25lOyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nLXRvcDoxMHB4OyBwYWRkaW5nLWJvdHRvbToxMHB4IiBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzY0NDE1NiUyNmF1dG9BcHBseSUzRHRydWUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I1XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbF9hcHBseWxpbmslMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ij5BUFBMWTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQoNCiAgICAgICAgICAgIDwvdGFibGU-DQoNCg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQoNCiAgICA8dHIgY2xhc3M9ImMtcGVrdjluIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGxlZnQ7IiBhbGlnbj0ibGVmdCI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJhY2tncm91bmQ6I0ZGRkZGRjsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LXNpemU6MTNweDsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMHB4IDBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIj4NCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImMtcGVrdjluIg0KICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGNlbnRlcjsiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayINCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAxMHB4IDBweCAxMHB4OyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZDojRkZGRkZGIg0KICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgYm9yZGVyLXJhZGl1czozcHg7IHBhZGRpbmc6MTBweDsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDUwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSIxMDAlIiBzdHlsZT0id2lkdGg6NTAwcHg7IGZvbnQtc2l6ZToxM3B4OyBsaW5lLWhlaWdodDoxOXB4OyBmb250LXdlaWdodDo3MDA7Ij48YQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3NDY0NTkyJTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iNl8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWwlMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTsgY29sb3I6IzVlMGJhYjsgZm9udC13ZWlnaHQ6NzAwOyI-U3RlcmlsaXphdGlvbiBUZWNobmljaWFuPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExhbmNlc29mdCBJbmRpYSBQcml2YXRlIExpbWl0ZWQ8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHb2EgJm5ic3A7Jm5ic3A7Jm5ic3A7fCZuYnNwOyZuYnNwOyZuYnNwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMC0zIHlycw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNraWxsczogIFN0ZXJpbGl6YXRpb24gVGVjaG5pY2lhbiwgVGVjaG5pY2lhbjwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCIgYWxpZ249InJpZ2h0IiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmctdG9wOjVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSIgYmFja2dyb3VuZC1jb2xvcjogIzZlMDBiZDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMTAwJSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogI0ZGRkZGRjsgZm9udC1zaXplOjEzcHg7Ij48YSBzdHlsZT0iY29sb3I6I0ZGRkZGRjsgdGV4dC1kZWNvcmF0aW9uOm5vbmU7IGRpc3BsYXk6YmxvY2s7IHBhZGRpbmctdG9wOjEwcHg7IHBhZGRpbmctYm90dG9tOjEwcHgiIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3NDY0NTkyJTI2YXV0b0FwcGx5JTNEdHJ1ZSUyNnNwbCUzRG1vbnN0ZXJpbmRpYV9yZWNvbW1lbmRlZGpvYnNfd2Vla2x5X0pvYjZfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsX2FwcGx5bGluayUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiPkFQUExZPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KDQoNCg0KICAgICAgICAgICAgPC90YWJsZT4NCg0KDQogICAgICAgIDwvdGQ-DQogICAgPC90cj4NCg0KICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYmFja2dyb3VuZDojRkZGRkZGOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtc2l6ZToxM3B4OyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAwcHggMHB4OyBjb2xvcjogIzAwMDAwMDsiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMTAwJSIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPg0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICANCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iDQogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyIgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYy0xbTllbWZ4IGMtemp3ZmhrIg0KICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOmxlZnQ7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtZmFtaWx5OiBBcmlhbDsgcGFkZGluZzowIDEwcHggMHB4IDEwcHg7IGNvbG9yOiAjMDAwMDAwOyBiYWNrZ3JvdW5kOiNGRkZGRkYiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImZ1bGxXaWR0aCIgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZGRkZGRkOyBib3JkZXItcmFkaXVzOjNweDsgcGFkZGluZzoxMHB4OyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBhbGlnbj0ibGVmdCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6I2ZmZjt3aWR0aDoxMDAlO21heC13aWR0aDo0NTBweCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjEwMCUiIHN0eWxlPSJ3aWR0aDo1MDBweDsgZm9udC1zaXplOjEzcHg7IGxpbmUtaGVpZ2h0OjE5cHg7IGZvbnQtd2VpZ2h0OjcwMDsiPjxhDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGam9iLWRldGFpbHMlM0ZpZCUzRDc3MDQzMTglMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I3XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbCUyNnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lOyBjb2xvcjojNWUwYmFiOyBmb250LXdlaWdodDo3MDA7Ij5FeGVjdXRpdmVzPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVYTCBJVCBzZXJ2aWNlIG1hbmFnZW1lbnQ8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb2lkYSAmbmJzcDsmbmJzcDsmbmJzcDt8Jm5ic3A7Jm5ic3A7Jm5ic3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwLTggeXJzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2tpbGxzOiAgRW5nbGlzaCBDb21tdW5pY2F0aW9uLCBSZWFkaW5nIENvbXByZWhlbnNpb248L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGFsaWduPSJyaWdodCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIiBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtc2l6ZToxM3B4OyI-PGEgc3R5bGU9ImNvbG9yOiNGRkZGRkY7IHRleHQtZGVjb3JhdGlvbjpub25lOyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nLXRvcDoxMHB4OyBwYWRkaW5nLWJvdHRvbToxMHB4IiBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzcwNDMxOCUyNmF1dG9BcHBseSUzRHRydWUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I3XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbF9hcHBseWxpbmslMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ij5BUFBMWTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQoNCiAgICAgICAgICAgIDwvdGFibGU-DQoNCg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQoNCiAgICA8dHIgY2xhc3M9ImMtcGVrdjluIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGxlZnQ7IiBhbGlnbj0ibGVmdCI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJhY2tncm91bmQ6I0ZGRkZGRjsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LXNpemU6MTNweDsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMHB4IDBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIj4NCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImMtcGVrdjluIg0KICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGNlbnRlcjsiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayINCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAxMHB4IDBweCAxMHB4OyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZDojRkZGRkZGIg0KICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgYm9yZGVyLXJhZGl1czozcHg7IHBhZGRpbmc6MTBweDsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDUwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSIxMDAlIiBzdHlsZT0id2lkdGg6NTAwcHg7IGZvbnQtc2l6ZToxM3B4OyBsaW5lLWhlaWdodDoxOXB4OyBmb250LXdlaWdodDo3MDA7Ij48YQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3NjEwNzg2JTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iOF8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWwlMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTsgY29sb3I6IzVlMGJhYjsgZm9udC13ZWlnaHQ6NzAwOyI-QVIgQ2FsbGVyIG1lZGljYWwgYmlsbGluZzwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRyaXggSHIgVGVjaG5vbG9naWVzIFByaXZhdGUgTGltaXRlZDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE11bHRpcGxlIENpdGllcyAmbmJzcDsmbmJzcDsmbmJzcDt8Jm5ic3A7Jm5ic3A7Jm5ic3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLTUgeXJzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iZm9udC1zaXplOjEycHg7IGxpbmUtaGVpZ2h0OjIwcHg7IGZvbnQtd2VpZ2h0OjMwMDsgY29sb3I6IzcyNzI3MjsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2tpbGxzOiAgTWVkaWNhbCBCaWxsaW5nLCBBciBDYWxsZXIsIFVzIEhlYWx0aGNhcmUsIEhlYWx0aGNhcmUsIFBoeXNpY2lhbnM8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGFsaWduPSJyaWdodCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIiBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtc2l6ZToxM3B4OyI-PGEgc3R5bGU9ImNvbG9yOiNGRkZGRkY7IHRleHQtZGVjb3JhdGlvbjpub25lOyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nLXRvcDoxMHB4OyBwYWRkaW5nLWJvdHRvbToxMHB4IiBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzYxMDc4NiUyNmF1dG9BcHBseSUzRHRydWUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I4XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbF9hcHBseWxpbmslMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ij5BUFBMWTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQoNCiAgICAgICAgICAgIDwvdGFibGU-DQoNCg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQoNCiAgICA8dHIgY2xhc3M9ImMtcGVrdjluIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGxlZnQ7IiBhbGlnbj0ibGVmdCI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJhY2tncm91bmQ6I0ZGRkZGRjsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LXNpemU6MTNweDsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMHB4IDBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIj4NCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImMtcGVrdjluIg0KICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGNlbnRlcjsiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayINCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAxMHB4IDBweCAxMHB4OyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZDojRkZGRkZGIg0KICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgYm9yZGVyLXJhZGl1czozcHg7IHBhZGRpbmc6MTBweDsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDUwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSIxMDAlIiBzdHlsZT0id2lkdGg6NTAwcHg7IGZvbnQtc2l6ZToxM3B4OyBsaW5lLWhlaWdodDoxOXB4OyBmb250LXdlaWdodDo3MDA7Ij48YQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q3NTY3NjI0JTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iOV8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWwlMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246bm9uZTsgY29sb3I6IzVlMGJhYjsgZm9udC13ZWlnaHQ6NzAwOyI-QnVzaW5lc3MgQW5hbHlzdCsgUHJvZHVjdCBPd25lcjwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGNlbGxlbmNlIEFuZCBFbWluZW5jZSBMTFA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNdWx0aXBsZSBDaXRpZXMgJm5ic3A7Jm5ic3A7Jm5ic3A7fCZuYnNwOyZuYnNwOyZuYnNwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgNS03IHlycw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNraWxsczogIEtleSBTa2lsbHM6IFVJL1VYLCBEZXZlbG9wbWVudC9UZXN0aW5nIGluIFdlYi9Nb2JpbGUgQXBwLCBBZ2lsZS8uLi48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGFsaWduPSJyaWdodCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIiBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtc2l6ZToxM3B4OyI-PGEgc3R5bGU9ImNvbG9yOiNGRkZGRkY7IHRleHQtZGVjb3JhdGlvbjpub25lOyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nLXRvcDoxMHB4OyBwYWRkaW5nLWJvdHRvbToxMHB4IiBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENzU2NzYyNCUyNmF1dG9BcHBseSUzRHRydWUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2I5XzA3JTJGMTIlMkYyMDIyXzA0N2VmZjZjLWJlNjYtNGYxMS05YjQxLTMwZmJmODk1YjBkNl9lbWFpbF9hcHBseWxpbmslMjZ1dG1fc291cmNlJTNEcmVjb21tZW5kZWRqb2JzJTI2dXRtX21lZGl1bSUzRGVtYWlsJTI2dXRtX3Rlcm0lM0RlbmdhZ2VtZW50Ij5BUFBMWTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQoNCiAgICAgICAgICAgIDwvdGFibGU-DQoNCg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQoNCiAgICA8dHIgY2xhc3M9ImMtcGVrdjluIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGxlZnQ7IiBhbGlnbj0ibGVmdCI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJhY2tncm91bmQ6I0ZGRkZGRjsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LXNpemU6MTNweDsgZm9udC1mYW1pbHk6IEFyaWFsOyBwYWRkaW5nOjAgMHB4IDBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIj4NCg0KICAgICAgICAgICAgICAgIA0KDQogICAgICAgICAgICAgICAgDQoNCiAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImMtcGVrdjluIg0KICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHRleHQtYWxpZ246IGNlbnRlcjsiIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayINCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmc6MCAxMHB4IDBweCAxMHB4OyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZDojRkZGRkZGIg0KICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2RkZGRkZDsgYm9yZGVyLXJhZGl1czozcHg7IHBhZGRpbmc6MTBweDsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCB2YWxpZ249Im1pZGRsZSI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYWxpZ249ImxlZnQiIGJvcmRlcj0iMCIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDUwcHgiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPSIxMDAlIiBzdHlsZT0id2lkdGg6NTAwcHg7IGZvbnQtc2l6ZToxM3B4OyBsaW5lLWhlaWdodDoxOXB4OyBmb250LXdlaWdodDo3MDA7Ij48YQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3Lm1vbnN0ZXJpbmRpYS5jb20vcmlvL2F1dG9Mb2dpbi9zZWVrZXIvUTFoa2FFcDNaWFpQYlZsalZWZENjMmwzTTJSUVpGTkxWRUY0WXpOb1IwVjZOalZOY1dVeGFUWnhRMlpLUTNRNVZVVlJlR3hzTXpKeU1uVXliVmxyTUd0VE9IWjNVak5rTUVKbEt6SlVhSEppYVN0UmIwcDFLMVJ4ZERFNVZraHdOMU41T1RSck4xZFpiM005P3JldHVybl91cmw9aHR0cHMlM0ElMkYlMkZ3d3cubW9uc3RlcmluZGlhLmNvbSUyRnNlZWtlciUyRmpvYi1kZXRhaWxzJTNGaWQlM0Q1ODEyNTU0JTI2c3BsJTNEbW9uc3RlcmluZGlhX3JlY29tbWVuZGVkam9ic193ZWVrbHlfSm9iMTBfMDclMkYxMiUyRjIwMjJfMDQ3ZWZmNmMtYmU2Ni00ZjExLTliNDEtMzBmYmY4OTViMGQ2X2VtYWlsJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOm5vbmU7IGNvbG9yOiM1ZTBiYWI7IGZvbnQtd2VpZ2h0OjcwMDsiPkFzc2Vzc21lbnQgRXhwZXJ0IHx8IEJhbmdhbG9yZTwvYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJmb250LXNpemU6MTJweDsgbGluZS1oZWlnaHQ6MjBweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNzI3MjcyOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb3VuZGl0IChGb3JtZXJseSBNb25zdGVyKTwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJlbmdhbHVydSAvIEJhbmdhbG9yZSAmbmJzcDsmbmJzcDsmbmJzcDt8Jm5ic3A7Jm5ic3A7Jm5ic3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA2LTEyIHlycw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImZvbnQtc2l6ZToxMnB4OyBsaW5lLWhlaWdodDoyMHB4OyBmb250LXdlaWdodDozMDA7IGNvbG9yOiM3MjcyNzI7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNraWxsczogIEFzc2Vzc21lbnQgRGVzaWduIiwgIkFzc2Vzc21lbnQgRGVzaWduaW5nIiwgIkFzc2Vzc21lbnQgRGV2ZWxvcG0uLi48L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAiIGFsaWduPSJyaWdodCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxscGFkZGluZz0iMCI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nLXRvcDo1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iZnVsbFdpZHRoIiB3aWR0aD0iMTAwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGxwYWRkaW5nPSIwIiBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjEwMCUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtc2l6ZToxM3B4OyI-PGEgc3R5bGU9ImNvbG9yOiNGRkZGRkY7IHRleHQtZGVjb3JhdGlvbjpub25lOyBkaXNwbGF5OmJsb2NrOyBwYWRkaW5nLXRvcDoxMHB4OyBwYWRkaW5nLWJvdHRvbToxMHB4IiBocmVmPSJodHRwczovL3d3dy5tb25zdGVyaW5kaWEuY29tL3Jpby9hdXRvTG9naW4vc2Vla2VyL1ExaGthRXAzWlhaUGJWbGpWVmRDYzJsM00yUlFaRk5MVkVGNFl6Tm9SMFY2TmpWTmNXVXhhVFp4UTJaS1EzUTVWVVZSZUd4c016SnlNblV5YlZsck1HdFRPSFozVWpOa01FSmxLekpVYUhKaWFTdFJiMHAxSzFSeGRERTVWa2h3TjFONU9UUnJOMWRaYjNNOT9yZXR1cm5fdXJsPWh0dHBzJTNBJTJGJTJGd3d3Lm1vbnN0ZXJpbmRpYS5jb20lMkZzZWVrZXIlMkZqb2ItZGV0YWlscyUzRmlkJTNENTgxMjU1NCUyNmF1dG9BcHBseSUzRHRydWUlMjZzcGwlM0Rtb25zdGVyaW5kaWFfcmVjb21tZW5kZWRqb2JzX3dlZWtseV9Kb2IxMF8wNyUyRjEyJTJGMjAyMl8wNDdlZmY2Yy1iZTY2LTRmMTEtOWI0MS0zMGZiZjg5NWIwZDZfZW1haWxfYXBwbHlsaW5rJTI2dXRtX3NvdXJjZSUzRHJlY29tbWVuZGVkam9icyUyNnV0bV9tZWRpdW0lM0RlbWFpbCUyNnV0bV90ZXJtJTNEZW5nYWdlbWVudCI-QVBQTFk8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI-DQoNCg0KDQogICAgICAgICAgICA8L3RhYmxlPg0KDQoNCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KDQoNCg0KICAgIDwhLS0gPHRyIGNsYXNzPSJjLXBla3Y5biIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB0ZXh0LWFsaWduOiBjZW50ZXI7IiBhbGlnbj0iY2VudGVyIj4NCiAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgcGFkZGluZzogMHB4IDEwcHggMTBweDsgYmFja2dyb3VuZDojRkZGRkZGIiB2YWxpZ249Im1pZGRsZSI-PHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iMTAwJSIgY2xhc3M9ImMtMXF2NWJiaiIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXItY29sb3I6ICNGRkZGRkY7IGJvcmRlci1zdHlsZTogc29saWQ7IHdpZHRoOiAxMDAlOyBib3JkZXItd2lkdGg6IDBweCAwcHggMDsiPg0KICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgICAgICAgPHRkIGNsYXNzPSJjLTFtOWVtZnggYy16andmaGsiIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmctdG9wOjBweDsgY29sb3I6ICMwMDAwMDA7IiB2YWxpZ249Im1pZGRsZSI-PGltZyBzcmM9ImltYWdlcy9jZXJ0aWZpLmpwZyIgd2lkdGg9IjEwMCUiIC8-PC90ZD4NCiAgICAgICAgICAgPC90cj4NCiAgICAgICAgIDwvdGJvZHk-DQogICAgICAgPC90YWJsZT48L3RkPg0KICAgPC90cj4gLS0-DQoNCg0KICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiIGFsaWduPSJsZWZ0Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTtiYWNrZ3JvdW5kOiAjRkZGRkZGOyBwYWRkaW5nOiAxMHB4IDEwcHggMHB4OyINCiAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJjLTFxdjViYmoiDQogICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXItY29sb3I6ICNGRkZGRkY7IGJvcmRlci1zdHlsZTogc29saWQ7IHdpZHRoOiAxMDAlOyBib3JkZXItd2lkdGg6IDBweCAwcHggMDsgYmFja2dyb3VuZDogI0ZGRkZGRjsgcGFkZGluZzogMDsiPg0KICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICA8IS0tPHRyIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtcmRla3dhIg0KICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBwYWRkaW5nLXRvcDogMHB4OyINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIiBhbGlnbj0iY2VudGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSB3aWR0aD0iMjUwIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iIGJhY2tncm91bmQtY29sb3I6ICM2ZTAwYmQ7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4mbmJzcDs8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgYWxpZ249ImNlbnRlciIgd2lkdGg9IjI1MCIgc3R5bGU9ImNvbG9yOiAjRkZGRkZGOyBmb250LXNpemU6MTNweDsiPjxhIHRoOmhyZWY9IiR7bW9yZUpvYnNVcmx9IiB0YXJnZXQ9Il9ibGFuayINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNGRkZGRkY7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiA1MDA7IGZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDE1cHg7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgbGV0dGVyLXNwYWNpbmc6IC43cHg7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsiPlNFRSBNT1JFIEpPQlM8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMSUtFIFRISVMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPiZuYnNwOzwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4tLT4NCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogbGVmdDsiDQogICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImZ1bGxXaWR0aCIgc3R5bGU9Im1hcmdpbi10b3A6MTBweDsgYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGNvbG9yOiMwMDA7IHBhZGRpbmc6MjBweCAxMHB4IDEwcHg7IHdpZHRoOjUwJSINCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj48c3Ryb25nPkpPQiBQUk9GSUxFPC9zdHJvbmc-PC90ZD4NCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJmdWxsV2lkdGgiIHN0eWxlPSJtYXJnaW4tdG9wOjEwcHg7bWFyZ2luLWJvdHRvbToxMHB4OyBmb250LXNpemU6MTNweDsgbGluZS1oZWlnaHQ6MThweDsgcGFkZGluZy1yaWdodDoxMHB4O3dpZHRoOjMwJTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9InRvcDogMHB4OyBsZWZ0OiAwcHg7IHdpZHRoOiAzMHB4OyBoZWlnaHQ6IDE2cHg7IHRleHQtYWxpZ246IHJpZ2h0OyBsZXR0ZXItc3BhY2luZzogMHB4OyBmb250LXdlaWdodDo3MDA7Ij4yOSU8L3NwYW4-DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0idG9wOiAwcHg7IGxlZnQ6IDMwcHg7IHdpZHRoOiA2OHB4OyBoZWlnaHQ6IDE2cHg7IHRleHQtYWxpZ246IHJpZ2h0OyBsZXR0ZXItc3BhY2luZzogMHB4OyBjb2xvcjogIzAwMDAwMDsiPlByb2ZpbGUgU2NvcmUgPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6IDhweDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMTA4LDg0LDIxOCwwLjEpO3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi10b3A6IDJweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJ3aWR0aDoyOSU7ZGlzcGxheTpibG9jazsgaGVpZ2h0OiA4cHg7YmFja2dyb3VuZC1jb2xvcjogI0Y3ODIxQjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjAiID48L3NwYW4-DQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyINCiAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD0iMTAwJSIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBwYWRkaW5nOjVweCAwIDAiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSIgY29sc3Bhbj0iMiI-DQogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIxMDAlIiBjbGFzcz0iYy0xcXY1YmJqIGZ1bGxXaWR0aCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJvcmRlci1jb2xvcjogI0ZGRkZGRjsgYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLXdpZHRoOiAwcHggMHB4IDA7IGJhY2tncm91bmQ6I0ZGRjsgcGFkZGluZzogMHB4IDBweCAwcHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImMtMW05ZW1meCBjLXpqd2ZoayBmdWxsV2lkdGgiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwJSIgc3R5bGU9IiBib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjpsZWZ0OyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTogQXJpYWw7IHBhZGRpbmctdG9wOjBweDsgY29sb3I6ICMwMDAwMDA7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJmdWxsV2lkdGgiIHdpZHRoPSIxMDAlIiBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6MTAwJTtib3JkZXItcmFkaXVzOjBweDsgcGFkZGluZzoxMHB4IDEwcHg7IGJhY2tncm91bmQ6I2Y2ZjBmYjsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9IjgwJSIgc3R5bGU9ImZvbnQtc2l6ZToxM3B4OyBsaW5lLWhlaWdodDoxOHB4OyBmb250LXdlaWdodDo3MDA7IHBhZGRpbmctcmlnaHQ6MTBweDsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249InRvcCI-PGEgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGcHJvZmlsZSUzRnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQlMjZhcG9wJTNEdXBkYXRlX3Byb2ZpbGVfZW1haWwiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtZGVjb3JhdGlvbjpub25lOyBjb2xvcjojMDAwIj4oWW91ciBEZXNpZ25hdGlvbik8L2E-PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmb250LXNpemU6MTJweDsgZm9udC13ZWlnaHQ6MzAwOyBjb2xvcjojNTA1MDUwIj48L3NwYW4-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYy1yeXNraHQgYy16andmaGsiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiB0b3A7IHBhZGRpbmctdG9wOiAwcHg7IHRleHQtYWxpZ246cmlnaHQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-PGEgaHJlZj0iaHR0cHM6Ly93d3cubW9uc3RlcmluZGlhLmNvbS9yaW8vYXV0b0xvZ2luL3NlZWtlci9RMWhrYUVwM1pYWlBiVmxqVlZkQ2MybDNNMlJRWkZOTFZFRjRZek5vUjBWNk5qVk5jV1V4YVRaeFEyWktRM1E1VlVWUmVHeHNNekp5TW5VeWJWbHJNR3RUT0haM1VqTmtNRUpsS3pKVWFISmlhU3RSYjBwMUsxUnhkREU1Vmtod04xTjVPVFJyTjFkWmIzTTk_cmV0dXJuX3VybD1odHRwcyUzQSUyRiUyRnd3dy5tb25zdGVyaW5kaWEuY29tJTJGc2Vla2VyJTJGcHJvZmlsZSUzRnV0bV9zb3VyY2UlM0RyZWNvbW1lbmRlZGpvYnMlMjZ1dG1fbWVkaXVtJTNEZW1haWwlMjZ1dG1fdGVybSUzRGVuZ2FnZW1lbnQlMjZhcG9wJTNEdXBkYXRlX3Byb2ZpbGVfZW1haWwiIHRhcmdldD0iX2JsYW5rIg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsgZm9udC1mYW1pbHk6QXJpYWw7IGZvbnQtc2l6ZTogMTJweDsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBsZXR0ZXItc3BhY2luZzogLjdweDsgdGV4dC1kZWNvcmF0aW9uOiBub25lOyBjb2xvcjogIzZlMDBiZDsiPjxzdHJvbmc-VVBEQVRFPC9zdHJvbmc-PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCg0KDQoNCg0KICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0iYy1wZWt2OW4iIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdGV4dC1hbGlnbjogY2VudGVyOyINCiAgICAgICAgICAgICAgICAgICAgYWxpZ249ImxlZnQiPg0KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBwYWRkaW5nOjE1cHg7IGJhY2tncm91bmQ6I0ZGRkZGRjsgZm9udC1zaXplOjEzcHg7IGxpbmUtaGVpZ2h0OjE4cHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImxlZnQiIGNvbHNwYW49IjIiPkhhdmUgeW91IGhlYXJkPyBQcm9maWxlcyB3aXRoIDEwMCUgY29tcGxldGlvbiBzY29yZXMgZ2V0IDNYIHRoZSB2aXNpYmlsaXR5LCBhbmQgeW91ciBjdXJyZW50IHByb2ZpbGUgc2NvcmUgaXMgMjklLjwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0iYy1yeXNraHQgYy16andmaGsiDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiAzMDA7IGZvbnQtc2l6ZTogMTNweDtjb2xvcjojMDAwOyBwYWRkaW5nOjIwcHggMTBweDsgIg0KICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiIGNvbHNwYW49IjIiPkhhdmUgYSBncmVhdCBkYXkgYW5kIGdvb2QgbHVjayE8YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc-PGJyIC8-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVGVhbSBmb3VuZGl0PGJyIC8-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKEZvcm1lcmx5IE1vbnN0ZXIpPC9zdHJvbmc-PC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQogICAgPHRyIGNsYXNzPSJjLTFjOW85ZXggYy0xYzg2c2NtIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Ij4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsiIHZhbGlnbj0ibWlkZGxlIj48L3RkPg0KICAgIDwvdHI-DQogICAgPHRyPg0KICAgICAgICA8dGQgc3R5bGU9ImJvcmRlcjowOyBiYWNrZ3JvdW5kOiAjM2QzZDNkOyBwYWRkaW5nOjE1cHgiPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSI1IiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9ImMtMXF2NWJiaiINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBib3JkZXItY29sb3I6ICNFM0UzRTM7IGJvcmRlci1zdHlsZTogc29saWQ7IHdpZHRoOiAxMDAlOyBib3JkZXItd2lkdGg6IDBweDsgZm9udC1zaXplOiAxMS44MTgxOHB4OyB0ZXh0LWFsaWduOiBsZWZ0OyBwYWRkaW5nOiAwcHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwJSI-DQogICAgICAgICAgICA8dGJvZHk-DQogICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgZm9udC1mYW1pbHk6QXJpYWw7Zm9udC13ZWlnaHQ6IDMwMDsgZm9udC1zaXplOiAxMXB4O2NvbG9yOiNGRkZGRkY7IHZlcnRpY2FsLWFsaWduOiB0b3A7IHBhZGRpbmctcmlnaHQ6NXB4Ig0KICAgICAgICAgICAgICAgICAgICB2YWxpZ249InRvcCINCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjI1Ij48aW1nIGhlaWdodD0iMjMiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vbWVkaWEubW9uc3RlcmluZGlhLmNvbS9wcm9kLWNkbi9lbWFpbC9pbWFnZXMvd2FybmluZy5wbmciDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMjUiPjwvdGQ-DQogICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgZm9udC1mYW1pbHk6QXJpYWw7Zm9udC13ZWlnaHQ6IDMwMDsgZm9udC1zaXplOiAxMXB4O2NvbG9yOiNGRkZGRkY7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Ig0KICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-QmV3YXJlIG9mIGZha2Ugam9iIHBvc3RpbmdzIHRoYXQgZ2V0IGxpc3RlZCBvbmxpbmUgZnJvbSB0aW1lIHRvIHRpbWUgYW5kIGFzayBmb3IgeW91ciBwZXJzb25hbCBpbmZvcm1hdGlvbiBpbGxlZ2FsbHkuIERvIG5vdCBwYXkgYW55IG1vbmV5IHRvIGFueW9uZSB3aG8gcHJvbWlzZXMgdG8gZmluZCB5b3UgYSBqb2IuIGZvdW5kaXQgc2hhbGwgbm90IGhhdmUgYW55IHJlc3BvbnNpYmlsaXR5IGluIHRoaXMgcmVnYXJkLjwvdGQ-DQogICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgPC90YWJsZT48L3RkPg0KICAgIDwvdHI-DQogICAgPHRyIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICA8dGQgY2xhc3M9ImMtcnlza2h0IGMtemp3ZmhrIg0KICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTpBcmlhbDtmb250LXdlaWdodDogMzAwOyBmb250LXNpemU6IDEycHg7Y29sb3I6IzAwMDsgcGFkZGluZy10b3A6IDIwcHg7IHRleHQtYWxpZ246Y2VudGVyIg0KICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPkRvd25sb2FkIEFwcCA8L3RkPg0KICAgIDwvdHI-DQogICAgPHRyIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsiPg0KICAgICAgICA8dGQgY2xhc3M9ImMtcnlza2h0IGMtemp3ZmhrIg0KICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBmb250LWZhbWlseTpBcmlhbDtmb250LXdlaWdodDogMzAwOyBmb250LXNpemU6IDEycHg7Y29sb3I6IzAwMDsgcGFkZGluZy10b3A6IDBweDsgdGV4dC1hbGlnbjpjZW50ZXI7IHBhZGRpbmctYm90dG9tOiAyMHB4OyINCiAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj48dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iNSIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSIyNzAiPg0KICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgIDx0ZD48YSBocmVmPSJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM_aWQ9Y29tLm1vbnN0ZXJpbmRpYS5zZWVrZXIudmlld3MiPjxpbWcNCiAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9tZWRpYS5tb25zdGVyaW5kaWEuY29tL3Byb2QtY2RuL2VtYWlsL2ltYWdlcy9nb29nbGUtcGxheS5wbmciLz48L2E-PC90ZD4NCiAgICAgICAgICAgICAgICA8dGQ-PGEgaHJlZj0iaHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2luL2FwcC9tb25zdGVyLWpvYnMvaWQ1MjU3NzUxNjE_bXQ9OCI-PGltZw0KICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL21lZGlhLm1vbnN0ZXJpbmRpYS5jb20vcHJvZC1jZG4vZW1haWwvaW1hZ2VzL2FwcC1zdG9yZS5wbmciLz48L2E-PC90ZD4NCiAgICAgICAgICAgIDwvdHI-DQogICAgICAgIDwvdGFibGU-PC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6MCI-DQogICAgICAgICAgICA8dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSJjLTFxdjViYmoiDQogICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyBib3JkZXItY29sb3I6ICNFM0UzRTM7IGJvcmRlci1zdHlsZTogc29saWQ7IHdpZHRoOiAxMDAlOyBiYWNrZ3JvdW5kOiAjRUZGM0Y2OyBib3JkZXItd2lkdGg6IDBweDsgZm9udC1zaXplOiAxMS44MTgxOHB4OyBwYWRkaW5nOiAxOHB4IDBweCAyMHB4OyINCiAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwJSI-DQogICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTsgZm9udC1mYW1pbHk6QXJpYWw7Zm9udC13ZWlnaHQ6IDMwMDsgcGFkZGluZzowIDQlOyBmb250LXNpemU6IDEwcHg7Y29sb3I6Izk5OTk5OTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-PHNwYW4gY2xhc3M9ImMtMXc0bGN3eCI-WW91IGhhdmUgcmVjZWl2ZWQgdGhpcyBtYWlsIGJlY2F1c2UgeW91ciBlLW1haWwgYWRkcmVzcyBpcyByZWdpc3RlcmVkIHdpdGggd3d3LmZvdW5kaXQuaW4uIFBsZWFzZSBkbyBub3QgcmVwbHkgdG8gdGhpcyBtYWlsLCBhcyB0aGlzIGlzIGEgc3lzdGVtLWdlbmVyYXRlZCBjb21tdW5pY2F0aW9uIHNlbnQgdG8geW91IGJhc2VkIG9uIHlvdXIgam9iIHByZWZlcmVuY2VzIG9uIGZvdW5kaXQuIFdlIGhhdmUgZW5hYmxlZCBhbiBhdXRvLWxvZ2luIGZhY2lsaXR5IGZvciB5b3VyIGNvbnZlbmllbmNlIHRvIGVuc3VyZSB0aGF0IHlvdXIgam9iIHNlYXJjaGVzIGFuZCBhcHBsaWNhdGlvbiBleHBlcmllbmNlIGFyZSBzbW9vdGhlciBhbmQgZmFzdGVyLiBXZSByZWNvbW1lbmQgeW91IGRvIE5PVCBmb3J3YXJkIHRoaXMgZS1tYWlsIHRvIHByb3RlY3QgeW91ciBmb3VuZGl0IGFjY291bnQgZnJvbSB1bmF1dGhvcml6ZWQgYWNjZXNzL21pc3VzZS4gQWx0aG91Z2gsIGZvdW5kaXQgaGFzIGFkb3B0ZWQgdGhlIHJlcXVpcmVkIGZlYXNpYmxlIG1lYXN1cmVzIHRvIGVuc3VyZSB0aGF0IHRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBpcyBhdXRoZW50aWMuIEhvd2V2ZXIsIHdlIHN0cm9uZ2x5IHJlY29tbWVuZCB5b3UgdmVyaWZ5IHRoZSBhdXRoZW50aWNpdHkgb2YgdGhlIGluZm9ybWF0aW9uLiBmb3VuZGl0IGFsc28gYWR2aXNlcyB1c2VycyB0byBiZXdhcmUgb2YgYW55IGZyYXVkdWxlbnQgY29tbXVuaWNhdGlvbiBhc2tpbmcgZm9yIHBlcnNvbmFsIC9iYW5raW5nIGluZm9ybWF0aW9uIG9yIHNlZWtpbmcgbW9uZXkgZm9yIGFueSBqb2Igb2ZmZXIuIGZvdW5kaXQgZG9lcyBOT1QgYXV0aG9yaXplIGFueSBhZ2VuY3kvcGFydG5lciB0byBjb2xsZWN0IGFueSBmZWVzIGZvciBqb2Igb2ZmZXJzLiBSZXBvcnQgYW55IHN1Y2ggc3VzcGljaW91cyBhY3Rpdml0eSB0bzogc3BhbUBmb3VuZGl0LmluIG9yIGluZm9AZm91bmRpdC5pbi4gUGxlYXNlIG5vdGUgaW4gbm8gZXZlbnQgc2hhbGwgZm91bmRpdCBiZSBsaWFibGUgZm9yIGFueSBkYW1hZ2VzIHdoYXRzb2V2ZXIuIFdlIGFsc28gcmVjb21tZW5kIHlvdSB2aXNpdCB0aGUgJnF1b3Q7VGVybXMgb2YgVXNlJnF1b3Q7IGFuZCAmcXVvdDtQcml2YWN5IFBvbGljeSZxdW90OyBzZWN0aW9ucyBvZiB0aGUgZm91bmRpdCB3ZWJzaXRlIGZvciBtb3JlIGRldGFpbHMuPC9zcGFuPjwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiAzMDA7IHBhZGRpbmc6NXB4IDQlOyBmb250LXNpemU6IDEwcHg7Y29sb3I6Izk5OTk5OTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-PHNwYW4gY2xhc3M9ImMtMXc0bGN3eCI-SGF2ZSBhIHF1ZXN0aW9uPyBFLW1haWwgYXQgPGEgc3R5bGU9ImNvbG9yOiM2ZTAwYmQ7IiBocmVmPSJtYWlsdG86aW5mb0Bmb3VuZGl0LmluIj5pbmZvQGZvdW5kaXQuaW48L2E-PC9zcGFuPjwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOyI-DQogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiAzMDA7IHBhZGRpbmc6NXB4IDQlOyBmb250LXNpemU6IDEwcHg7Y29sb3I6Izk5OTk5OTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsiDQogICAgICAgICAgICAgICAgICAgICAgICB2YWxpZ249Im1pZGRsZSI-QmV3YXJlIG9mIGZha2Ugam9iIHBvc3RpbmdzIHRoYXQgZ2V0IGxpc3RlZCBvbmxpbmUgZnJvbSB0aW1lIHRvIHRpbWUgYW5kIHJlcXVpcmUgeW91IHRvIHNoYXJlIHlvdXIgcGVyc29uYWwgaW5mb3JtYXRpb24uPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDwvdGJvZHk-DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICA8L3RkPg0KICAgIDwvdHI-DQogICAgPHRyIGNsYXNzPSJjLXJ5NGd0aCIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiAzMDA7IGZvbnQtc2l6ZTogMTBweDtjb2xvcjojOTk5OTk5OyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyINCiAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJjLTF2bGQ0Y3oiDQogICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBwYWRkaW5nLXRvcDogMHB4OyBwYWRkaW5nLWJvdHRvbTogMHB4OyI-DQogICAgICAgICAgICAgICAgPHRib2R5Pg0KICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Ij4NCiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgdmVydGljYWwtYWxpZ246IG1pZGRsZTsiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgd2lkdGg9IjEwMCUiIGNsYXNzPSJjLTE1dTM3emUiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyBmb250LXNpemU6IDEwLjkwOTA5cHg7IHRleHQtYWxpZ246IGNlbnRlcjsgY29sb3I6ICM3RjhGQTQ7IHBhZGRpbmctdG9wOiAwcHg7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtd2VpZ2h0OiAzMDA7IGZvbnQtc2l6ZTogMTBweDtjb2xvcjojOTk5OTk5OyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlnbj0ibWlkZGxlIj7CqSAyMDIyIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC90ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ciBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJib3JkZXI6IDAgbm9uZTsgZm9udC1mYW1pbHk6QXJpYWw7Zm9udC13ZWlnaHQ6IDMwMDsgZm9udC1zaXplOiAxMHB4O2NvbG9yOiM5OTk5OTk7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWduPSJtaWRkbGUiPiZuYnNwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI-DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU-DQogICAgICAgICAgICAgICAgICAgIDwvdGQ-DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8L3Rib2R5Pg0KICAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyPg0KICAgIA0KDQogICAgPCEtLSB0ciB0aDppZj0iJHt0b3BCYW5uZXIuYmFubmVyRGF0YSAhPSBudWxsfSIgY2xhc3M9ImMtMXN5ZjNwYiIgc3R5bGU9ImJvcmRlcjogMCBub25lOyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyI-DQogICAgICAgIDx0ZCBjbGFzcz0ibW9iaWxlQWRzIiBzdHlsZT0iYm9yZGVyOiAwIG5vbmU7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IHBhZGRpbmc6MDsgdGV4dC1hbGlnbjpjZW50ZXIiIGFsaWduPSJjZW50ZXIiIHZhbGlnbj0ibWlkZGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpZnJhbWUgdGg6c3JjPSIke3RvcEJhbm5lci50cmFja1VybH0iIHdpZHRoPSIzMDAiIGhlaWdodD0iNjAiIGZyYW1lYm9yZGVyPSIwIiBtYXJnaW53aWR0aD0iMCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luaGVpZ2h0PSIwIiBzY3JvbGxpbmc9Im5vIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aDpocmVmPSIke3RvcEJhbm5lci5jbGlja1VybH0iPjxpbWcgdGg6c3JjPSIke3RvcEJhbm5lci5iYW5uZXJEYXRhfSIgd2lkdGg9IjU1MCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSI2MCIgYm9yZGVyPSIwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E-DQogICAgICAgICAgICAgICAgICAgICAgICA8L2lmcmFtZT4NCiAgICAgICAgPC90ZD4NCiAgICA8L3RyLS0-DQogICAgPC90Ym9keT4NCjwvdGFibGU-DQo8L2JvZHk-DQo8L2h0bWw-"
                        }
                    }
                ]
            }
        ]
    },
    "sizeEstimate": 92558,
    "historyId": "2093877",
    "internalDate": "1670638704000"
}